# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOPATH: '$(system.defaultWorkingDirectory)' # Go workspace path
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
#  GOROOT: '/usr/local/go1.11/gopath' # Go installation path
  modulePath: '$(GOPATH)/src/hello' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    ls $(GOBIN)
    ls -R $(GOPATH)
    mkdir -p '$(GOPATH)/pkg'
    echo $(GOPATH)/pkg
    mkdir -p '$(modulePath)'
    echo $(modulePath)
    shopt -s extglob
    shopt -s dotglob
    # mv !(gopath) '$(modulePath)'

    echo '##vso[task.prependpath]$(GOBIN)'
    #echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -t -d ./...
    if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        dep ensure
    fi
    go install .
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'

- script: |
    $(GOBIN)/hello &
    PS=`ps -ef |grep hello |grep -v grep |awk '{print $1}'`
    curl http://localhost:8000/status
    sleep 10
    kill -9 $PS
  